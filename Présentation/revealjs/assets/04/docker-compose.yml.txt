# ---------------------------
# üß± docker-compose.yml (optimis√© dev/prod)
# ---------------------------
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: geo-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_URI_TPL=${MONGODB_URI_TPL}
      - MONGODB_DB=${MONGODB_DB}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - BACKUP_DIR=/backups
    depends_on:
      - maildev
    volumes:
      - ./backend:/app
      - ./backups:/backups
      - ./backend/uploads:/app/uploads
      - ./backend/data/samples:/app/data/samples
      - ./.env:/app/.env
    restart: unless-stopped

  maildev:
    container_name: geo-maildev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    restart: unless-stopped

  # --- Frontend unifi√© avec variable d'environnement ---
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${DOCKER_TARGET:-dev}
      args:
        VITE_API_URL: ${VITE_API_URL:-/api}
        VITE_TILE_URL: ${VITE_TILE_URL:-/tiles/{z}/{x}/{y}.png}
    container_name: geo-frontend
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING:-true}
      - VITE_API_URL=${VITE_API_URL:-/api}
      - VITE_TILE_URL=${VITE_TILE_URL:-/tiles/{z}/{x}/{y}.png}
    depends_on:
      - backend
      - tiles
    ports:
      - "${FRONTEND_PORT:-5173}:${FRONTEND_INTERNAL_PORT:-5173}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  # --- Service tiles (commun dev/prod) ---
  tiles:
    image: nginx:1.25-alpine
    container_name: geo-tiles
    restart: unless-stopped
    command: |
      sh -c "
        rm -f /etc/nginx/conf.d/default.conf &&
        mkdir -p /var/log/nginx /var/cache/nginx/tiles_cache &&
        nginx -g 'daemon off;'
      "
    volumes:
      # Configuration optimis√©e
      - ./ops/nginx/tiles.conf:/etc/nginx/conf.d/tiles.conf:ro
      # Sant√© + assets locaux
      - ./ops/nginx/www:/var/www:ro
      # Cache persistant avec permissions
      - tiles_cache:/var/cache/nginx/tiles_cache
      # Logs pour debug
      - tiles_logs:/var/log/nginx
    ports:
      - "8080:80"
    # Limite m√©moire pour √©viter les fuites
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    # Sant√© du conteneur
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O /dev/null http://127.0.0.1/tiles/_health.png || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

volumes:
  tiles_cache:
    driver: local
  tiles_logs:
    driver: local

# --- Commandes rapides ---
# D√©veloppement: docker-compose --profile dev up -d
# Production:    docker-compose --profile prod up -d
# Les deux:      docker-compose --profile dev --profile prod up -d